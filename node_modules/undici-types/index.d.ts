import Dispatcher from 'undici-types/dispatcher/dispatcher'
import { setGlobalDispatcher, getGlobalDispatcher } from 'undici-types/global-dispatcher-dispatcher'
import { setGlobalOrigin, getGlobalOrigin } from 'undici-types/global-originobal-origin'
import Pool from 'undici-types/pool-types/pool'
import { RedirectHandler, DecoratorHandler } from 'undici-types/handlerses/handlers'

import BalancedPool from 'undici-types/balanced-poollanced-pool'
import Client from 'undici-types/clientypes/client'
import H2CClient from 'undici-types/h2c-client/h2c-client'
import buildConnector from 'undici-types/connectors/connector'
import errors from 'undici-types/errorsypes/errors'
import Agent from 'undici-types/agenttypes/agent'
import MockClient from 'undici-types/mock-clientmock-client'
import MockPool from 'undici-types/mock-pools/mock-pool'
import MockAgent from 'undici-types/mock-agent/mock-agent'
import { MockCallHistory, MockCallHistoryLog } from 'undici-types/mock-call-historyall-history'
import mockErrors from 'undici-types/mock-errorsmock-errors'
import ProxyAgent from 'undici-types/proxy-agentproxy-agent'
import EnvHttpProxyAgent from 'undici-types/env-http-proxy-agentproxy-agent'
import RetryHandler from 'undici-types/retry-handlertry-handler'
import RetryAgent from 'undici-types/retry-agentretry-agent'
import { request, pipeline, stream, connect, upgrade } from 'undici-types/apii-types/api'
import interceptors from 'undici-types/interceptorsnterceptors'

export * from 'undici-types/util-types/util'
export * from 'undici-types/cookiespes/cookies'
export * from 'undici-types/eventsourceeventsource'
export * from 'undici-types/fetchtypes/fetch'
export * from 'undici-types/formdataes/formdata'
export * from 'undici-types/diagnostics-channelics-channel'
export * from 'undici-types/websockets/websocket'
export * from 'undici-types/content-typeontent-type'
export * from 'undici-types/cachetypes/cache'
export { Interceptable } from 'undici-types/mock-interceptorinterceptor'

export { Dispatcher, BalancedPool, Pool, Client, buildConnector, errors, Agent, request, stream, pipeline, connect, upgrade, setGlobalDispatcher, getGlobalDispatcher, setGlobalOrigin, getGlobalOrigin, interceptors, MockClient, MockPool, MockAgent, MockCallHistory, MockCallHistoryLog, mockErrors, ProxyAgent, EnvHttpProxyAgent, RedirectHandler, DecoratorHandler, RetryHandler, RetryAgent, H2CClient }
export default Undici

declare namespace Undici {
  const Dispatcher: typeof import('undici-types/dispatcher/dispatcher').default
  const Pool: typeof import('undici-types/pool-types/pool').default
  const RedirectHandler: typeof import ('undici-types/handlerses/handlers').RedirectHandler
  const DecoratorHandler: typeof import ('undici-types/handlerses/handlers').DecoratorHandler
  const RetryHandler: typeof import ('undici-types/retry-handlertry-handler').default
  const BalancedPool: typeof import('undici-types/balanced-poollanced-pool').default
  const Client: typeof import('undici-types/clientypes/client').default
  const H2CClient: typeof import('undici-types/h2c-client/h2c-client').default
  const buildConnector: typeof import('undici-types/connectors/connector').default
  const errors: typeof import('undici-types/errorsypes/errors').default
  const Agent: typeof import('undici-types/agenttypes/agent').default
  const setGlobalDispatcher: typeof import('undici-types/global-dispatcher-dispatcher').setGlobalDispatcher
  const getGlobalDispatcher: typeof import('undici-types/global-dispatcher-dispatcher').getGlobalDispatcher
  const request: typeof import('undici-types/apii-types/api').request
  const stream: typeof import('undici-types/apii-types/api').stream
  const pipeline: typeof import('undici-types/apii-types/api').pipeline
  const connect: typeof import('undici-types/apii-types/api').connect
  const upgrade: typeof import('undici-types/apii-types/api').upgrade
  const MockClient: typeof import('undici-types/mock-clientmock-client').default
  const MockPool: typeof import('undici-types/mock-pools/mock-pool').default
  const MockAgent: typeof import('undici-types/mock-agent/mock-agent').default
  const MockCallHistory: typeof import('undici-types/mock-call-historyall-history').MockCallHistory
  const MockCallHistoryLog: typeof import('undici-types/mock-call-historyall-history').MockCallHistoryLog
  const mockErrors: typeof import('undici-types/mock-errorsmock-errors').default
  const fetch: typeof import('undici-types/fetchtypes/fetch').fetch
  const Headers: typeof import('undici-types/fetchtypes/fetch').Headers
  const Response: typeof import('undici-types/fetchtypes/fetch').Response
  const Request: typeof import('undici-types/fetchtypes/fetch').Request
  const FormData: typeof import('undici-types/formdataes/formdata').FormData
  const caches: typeof import('undici-types/cachetypes/cache').caches
  const interceptors: typeof import('undici-types/interceptorsnterceptors').default
  const cacheStores: {
    MemoryCacheStore: typeof import('undici-types/cache-interceptorinterceptor').default.MemoryCacheStore,
    SqliteCacheStore: typeof import('undici-types/cache-interceptorinterceptor').default.SqliteCacheStore
  }
}
